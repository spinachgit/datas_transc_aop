<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
           http://www.springframework.org/schema/aop  
           http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">
	<!-- AOP学习时的配置 -->
	<bean id="DukePerformer" class="com.spinach.aop.DukePerformer">
		<property name="name" value="duke" />
	</bean>
	<bean id="audience" class="com.spinach.aop.Audience" />
	<aop:config>
		<aop:aspect ref="audience">
			<aop:before method="takeSeat" pointcut="execution(* *.perform(..))" />
			<aop:before method="turnOffPhone" pointcut="execution(* *.perform(..))" />
			<aop:after-returning method="applaud" pointcut="execution(* *.perform(..))" />
			<aop:after-throwing method="unHappy" pointcut="execution(* *.perform(..))" />
		</aop:aspect>
	</aop:config>
	<!-- AOP学习时的配置 -->

	<!-- 日志切面类 -->
	<bean id="logAspectBean" class="com.spinach.aop.LogAspect" />
	<!-- 第1步： AOP的配置 -->
	<aop:config>
		<!-- 第2步：配置一个切面 -->
		<aop:aspect id="logAspect" ref="logAspectBean">
			<!-- 第3步：定义切入点,指定切入点表达式 -->
			<aop:pointcut id="allMethod" expression="execution(* *.*(..))" />
			<!-- 第4步：应用前置通知 -->
			<aop:before method="before" pointcut-ref="allMethod" />
			<!-- 第4步：应用后置通知 -->
			<aop:after-returning method="afterReturn" pointcut-ref="allMethod" />
			<!-- 第4步：应用最终通知 -->
			<aop:after method="after" pointcut-ref="allMethod" />
			<!-- 第4步：应用抛出异常后通知 -->
			<aop:after-throwing method="afterThrowing" pointcut-ref="allMethod" />
			<!-- 第4步：应用环绕通知 -->
			<!-- <aop:around method="doAround" pointcut-ref="allMethod" /> -->
		</aop:aspect>
	</aop:config>
</beans> 